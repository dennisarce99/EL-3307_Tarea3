$date
	Mon Nov 18 18:43:18 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module MainTB $end
$var wire 7 ! segmentos [6:0] $end
$var wire 4 " col [3:0] $end
$var wire 5 # anodos [4:0] $end
$var reg 1 $ clk $end
$var reg 4 % row [3:0] $end
$var reg 1 & rst $end
$scope module MainTop $end
$var wire 1 $ clk $end
$var wire 4 ' row [3:0] $end
$var wire 1 & rst $end
$var wire 4 ( sync_row [3:0] $end
$var wire 1 ) signal_num $end
$var wire 1 * shift_HQ_LQ_Q_1 $end
$var wire 7 + segmentos [6:0] $end
$var wire 2 , q_LSB [1:0] $end
$var wire 8 - num_o [7:0] $end
$var wire 16 . num_Y [15:0] $end
$var wire 8 / num_B [7:0] $end
$var wire 8 0 num_A [7:0] $end
$var wire 4 1 num [3:0] $end
$var wire 1 2 load_num $end
$var wire 1 3 load_add $end
$var wire 1 4 load_B $end
$var wire 1 5 load_A $end
$var wire 4 6 col [3:0] $end
$var wire 1 7 clk_div $end
$var wire 16 8 bcd_Y [15:0] $end
$var wire 5 9 anodos [4:0] $end
$var wire 1 : add_sub $end
$var reg 16 ; num_display [15:0] $end
$scope module Bin_BCD $end
$var wire 16 < binario [15:0] $end
$var reg 16 = bcd [15:0] $end
$var integer 32 > i [31:0] $end
$upscope $end
$scope module Frec $end
$var wire 1 $ clk $end
$var parameter 28 ? div $end
$var reg 1 7 clk_div $end
$var reg 28 @ cont [27:0] $end
$upscope $end
$scope module Keypad $end
$var wire 1 7 clk_div $end
$var wire 1 & rst $end
$var wire 4 A sync_row [3:0] $end
$var parameter 6 B state0 $end
$var parameter 6 C state1 $end
$var parameter 6 D state2 $end
$var parameter 6 E state3 $end
$var parameter 6 F state4 $end
$var parameter 6 G state5 $end
$var reg 4 H col [3:0] $end
$var reg 1 2 load_num $end
$var reg 6 I next_state [5:0] $end
$var reg 4 J num [3:0] $end
$var reg 6 K state [5:0] $end
$var reg 1 L sum_row $end
$upscope $end
$scope module Multiplicador $end
$var wire 1 7 clk $end
$var wire 1 & rst $end
$var wire 1 * shift_HQ_LQ_Q_1 $end
$var wire 1 3 load_add $end
$var wire 1 4 load_B $end
$var wire 1 5 load_A $end
$var wire 1 : add_sub $end
$var wire 8 M B [7:0] $end
$var wire 8 N A [7:0] $end
$var parameter 32 O N $end
$var reg 8 P HQ [7:0] $end
$var reg 8 Q LQ [7:0] $end
$var reg 8 R M [7:0] $end
$var reg 1 S Q_1 $end
$var reg 2 T Q_LSB [1:0] $end
$var reg 16 U Y [15:0] $end
$var reg 8 V adder_sub_out [7:0] $end
$var reg 17 W shift [16:0] $end
$upscope $end
$scope module Multiplicandos $end
$var wire 1 $ clk $end
$var wire 1 2 load_num $end
$var wire 4 X num [3:0] $end
$var wire 1 & rst $end
$var parameter 4 Y delete $end
$var parameter 4 Z enter $end
$var parameter 3 [ s0 $end
$var parameter 3 \ s1 $end
$var parameter 3 ] s2 $end
$var parameter 3 ^ s3 $end
$var parameter 3 _ s4 $end
$var parameter 3 ` s5 $end
$var parameter 3 a s6 $end
$var reg 3 b next_state [2:0] $end
$var reg 8 c num_A [7:0] $end
$var reg 8 d num_B [7:0] $end
$var reg 8 e num_o [7:0] $end
$var reg 8 f num_parcial [7:0] $end
$var reg 1 ) signal_num $end
$var reg 3 g state [2:0] $end
$upscope $end
$scope module Segmentos7 $end
$var wire 1 $ clk $end
$var wire 1 2 load_num $end
$var wire 16 h num [15:0] $end
$var parameter 3 i sel0 $end
$var parameter 3 j sel1 $end
$var parameter 3 k sel2 $end
$var parameter 3 l sel3 $end
$var parameter 3 m sel4 $end
$var reg 5 n anodos [4:0] $end
$var reg 4 o digito [3:0] $end
$var reg 4 p next_digito [3:0] $end
$var reg 3 q next_select [2:0] $end
$var reg 7 r segmentos [6:0] $end
$var reg 3 s select [2:0] $end
$upscope $end
$scope module Sync $end
$var wire 1 7 clk_div $end
$var wire 4 t row [3:0] $end
$var wire 1 & rst $end
$var reg 4 u sync_row [3:0] $end
$var reg 4 v val [3:0] $end
$upscope $end
$scope module ctrl $end
$var wire 1 7 clk $end
$var wire 2 w q_LSB [1:0] $end
$var wire 1 & rst $end
$var wire 1 ) signal_num $end
$var parameter 7 x idle $end
$var parameter 7 y init $end
$var parameter 32 z n $end
$var parameter 7 { res $end
$var parameter 7 | sel0 $end
$var parameter 7 } sel1 $end
$var parameter 7 ~ shift $end
$var parameter 7 !" sum $end
$var reg 1 : add_sub $end
$var reg 3 "" cont [2:0] $end
$var reg 1 5 load_A $end
$var reg 1 4 load_B $end
$var reg 1 3 load_add $end
$var reg 7 #" next_state [6:0] $end
$var reg 1 * shift_HQ_LQ_Q_1 $end
$var reg 7 $" state [6:0] $end
$var reg 2 %" z [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 !"
b100000 ~
b1000000 }
b100 |
b10000 {
b1000 z
b10 y
b1 x
b100 m
b11 l
b10 k
b1 j
b0 i
b110 a
b101 `
b100 _
b11 ^
b10 ]
b1 \
b0 [
b1011 Z
b1100 Y
b1000 O
b100000 G
b10000 F
b1000 E
b100 D
b10 C
b1 B
b110100101111000 ?
$end
#0
$dumpvars
b0 %"
bx $"
b1 #"
b111 ""
bx w
bx v
bx u
b0 t
bx s
b1111111 r
bx q
bx p
bx o
bx n
b0 h
bx g
b0 f
b0 e
b0 d
b0 c
b0 b
b0 X
bx W
bx V
bx U
bx T
xS
bx R
bx Q
bx P
b0 N
b0 M
xL
bx K
b0 J
b1 I
b1111 H
bx A
b0 @
bx >
bx =
bx <
b0 ;
0:
bx 9
bx 8
x7
b1111 6
05
04
03
02
b0 1
b0 0
b0 /
bx .
b0 -
bx ,
b1111111 +
0*
0)
bx (
b0 '
x&
b0 %
0$
bx #
b1111 "
b1111111 !
$end
#10000
b0 v
b1 K
b1 $"
b111111 !
b111111 +
b111111 r
17
b1 @
b0 o
b0 s
b0 p
b0 q
b0 #
b0 9
b0 n
1$
#20000
0$
b10 %
b10 '
b10 t
#30000
b10 @
b1 q
b1 #
b1 9
b1 n
1$
#40000
0$
b0 %
b0 '
b0 t
#50000
b11 @
b1 s
1$
#60000
0$
b100 %
b100 '
b100 t
#70000
b100 @
b10 q
b10 #
b10 9
b10 n
1$
#80000
0$
b0 %
b0 '
b0 t
#90000
b101 @
b10 s
1$
#100000
0$
b100 %
b100 '
b100 t
#110000
b110 @
b11 q
b100 #
b100 9
b100 n
1$
#120000
0$
b0 %
b0 '
b0 t
#130000
b111 @
b11 s
1$
#140000
0$
b100 %
b100 '
b100 t
#150000
b1000 @
b100 q
b1000 #
b1000 9
b1000 n
1$
#160000
0$
b0 %
b0 '
b0 t
#170000
b1001 @
b100 s
1$
#180000
0$
b1000 %
b1000 '
b1000 t
#190000
b1010 @
b0 q
b10000 #
b10000 9
b10000 n
1$
#200000
0$
b0 %
b0 '
b0 t
#210000
b1011 @
b0 s
1$
#220000
0$
b1 %
b1 '
b1 t
#230000
b1100 @
b1 q
b1 #
b1 9
b1 n
1$
#240000
0$
b0 %
b0 '
b0 t
#250000
b1101 @
b1 s
1$
#260000
0$
#270000
b1110 @
b10 q
b10 #
b10 9
b10 n
1$
#280000
0$
#290000
b1111 @
b10 s
1$
#300000
0$
#310000
b10000 @
b11 q
b100 #
b100 9
b100 n
1$
#320000
0$
#330000
b10001 @
b11 s
1$
#340000
0$
